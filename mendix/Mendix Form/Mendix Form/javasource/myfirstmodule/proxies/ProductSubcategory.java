// This file was generated by Mendix Business Modeler 4.0.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package myfirstmodule.proxies;

import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixIdentifier;
import com.mendix.systemwideinterfaces.core.IMendixObject;

/**
 * 
 */
public class ProductSubcategory
{
	private final IMendixObject productSubcategoryMendixObject;

	private final IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final String entityName = "MyFirstModule.ProductSubcategory";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		ProductSubcategoryKey("ProductSubcategoryKey"),
		EnglishProductSubcategoryName("EnglishProductSubcategoryName"),
		SpanishProductSubcategoryName("SpanishProductSubcategoryName"),
		FrenchProductSubcategoryName("FrenchProductSubcategoryName"),
		ProductSubcategory_ProductCategory("MyFirstModule.ProductSubcategory_ProductCategory");

		private String metaName;

		MemberNames(String s)
		{
			metaName = s;
		}

		@Override
		public String toString()
		{
			return metaName;
		}
	}

	public ProductSubcategory(IContext context)
	{
		this(context, Core.instantiate(context, "MyFirstModule.ProductSubcategory"));
	}

	protected ProductSubcategory(IContext context, IMendixObject productSubcategoryMendixObject)
	{
		if (productSubcategoryMendixObject == null)
			throw new IllegalArgumentException("The given object cannot be null.");
		if (!Core.isSubClassOf("MyFirstModule.ProductSubcategory", productSubcategoryMendixObject.getType()))
			throw new IllegalArgumentException("The given object is not a MyFirstModule.ProductSubcategory");

		this.productSubcategoryMendixObject = productSubcategoryMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'new ProductSubcategory(Context)' instead. Note that the constructor will not insert the new object in the database.
	 */
	@Deprecated
	public static myfirstmodule.proxies.ProductSubcategory create(IContext context) throws CoreException
	{
		IMendixObject mendixObject = Core.create(context, "MyFirstModule.ProductSubcategory");
		return new myfirstmodule.proxies.ProductSubcategory(context, mendixObject);
	}

	/**
	 * @deprecated Use 'ProductSubcategory.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static myfirstmodule.proxies.ProductSubcategory initialize(IContext context, IMendixIdentifier mendixIdentifier) throws CoreException
	{
		return myfirstmodule.proxies.ProductSubcategory.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.getSudoContext() can be used to obtain sudo access).
	 */
	public static myfirstmodule.proxies.ProductSubcategory initialize(IContext context, IMendixObject mendixObject)
	{
		return new myfirstmodule.proxies.ProductSubcategory(context, mendixObject);
	}

	public static myfirstmodule.proxies.ProductSubcategory load(IContext context, IMendixIdentifier mendixIdentifier) throws CoreException
	{
		IMendixObject mendixObject = Core.retrieveId(context, mendixIdentifier);
		return myfirstmodule.proxies.ProductSubcategory.initialize(context, mendixObject);
	}

	public static java.util.List<myfirstmodule.proxies.ProductSubcategory> load(IContext context, String xpathConstraint) throws CoreException
	{
		java.util.List<myfirstmodule.proxies.ProductSubcategory> result = new java.util.ArrayList<myfirstmodule.proxies.ProductSubcategory>();
		for (IMendixObject obj : Core.retrieveXPathQuery(context, "//MyFirstModule.ProductSubcategory" + xpathConstraint))
			result.add(myfirstmodule.proxies.ProductSubcategory.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws CoreException
	{
		Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(IContext context) throws CoreException
	{
		Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(IContext context)
	{
		Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of ProductSubcategoryKey
	 */
	public final Integer getProductSubcategoryKey()
	{
		return getProductSubcategoryKey(getContext());
	}

	/**
	 * @param context
	 * @return value of ProductSubcategoryKey
	 */
	public final Integer getProductSubcategoryKey(IContext context)
	{
		return (Integer) getMendixObject().getValue(context, MemberNames.ProductSubcategoryKey.toString());
	}

	/**
	 * Set value of ProductSubcategoryKey
	 * @param productsubcategorykey
	 */
	public final void setProductSubcategoryKey(Integer productsubcategorykey)
	{
		setProductSubcategoryKey(getContext(), productsubcategorykey);
	}

	/**
	 * Set value of ProductSubcategoryKey
	 * @param context
	 * @param productsubcategorykey
	 */
	public final void setProductSubcategoryKey(IContext context, Integer productsubcategorykey)
	{
		getMendixObject().setValue(context, MemberNames.ProductSubcategoryKey.toString(), productsubcategorykey);
	}

	/**
	 * @return value of EnglishProductSubcategoryName
	 */
	public final String getEnglishProductSubcategoryName()
	{
		return getEnglishProductSubcategoryName(getContext());
	}

	/**
	 * @param context
	 * @return value of EnglishProductSubcategoryName
	 */
	public final String getEnglishProductSubcategoryName(IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.EnglishProductSubcategoryName.toString());
	}

	/**
	 * Set value of EnglishProductSubcategoryName
	 * @param englishproductsubcategoryname
	 */
	public final void setEnglishProductSubcategoryName(String englishproductsubcategoryname)
	{
		setEnglishProductSubcategoryName(getContext(), englishproductsubcategoryname);
	}

	/**
	 * Set value of EnglishProductSubcategoryName
	 * @param context
	 * @param englishproductsubcategoryname
	 */
	public final void setEnglishProductSubcategoryName(IContext context, String englishproductsubcategoryname)
	{
		getMendixObject().setValue(context, MemberNames.EnglishProductSubcategoryName.toString(), englishproductsubcategoryname);
	}

	/**
	 * @return value of SpanishProductSubcategoryName
	 */
	public final String getSpanishProductSubcategoryName()
	{
		return getSpanishProductSubcategoryName(getContext());
	}

	/**
	 * @param context
	 * @return value of SpanishProductSubcategoryName
	 */
	public final String getSpanishProductSubcategoryName(IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.SpanishProductSubcategoryName.toString());
	}

	/**
	 * Set value of SpanishProductSubcategoryName
	 * @param spanishproductsubcategoryname
	 */
	public final void setSpanishProductSubcategoryName(String spanishproductsubcategoryname)
	{
		setSpanishProductSubcategoryName(getContext(), spanishproductsubcategoryname);
	}

	/**
	 * Set value of SpanishProductSubcategoryName
	 * @param context
	 * @param spanishproductsubcategoryname
	 */
	public final void setSpanishProductSubcategoryName(IContext context, String spanishproductsubcategoryname)
	{
		getMendixObject().setValue(context, MemberNames.SpanishProductSubcategoryName.toString(), spanishproductsubcategoryname);
	}

	/**
	 * @return value of FrenchProductSubcategoryName
	 */
	public final String getFrenchProductSubcategoryName()
	{
		return getFrenchProductSubcategoryName(getContext());
	}

	/**
	 * @param context
	 * @return value of FrenchProductSubcategoryName
	 */
	public final String getFrenchProductSubcategoryName(IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.FrenchProductSubcategoryName.toString());
	}

	/**
	 * Set value of FrenchProductSubcategoryName
	 * @param frenchproductsubcategoryname
	 */
	public final void setFrenchProductSubcategoryName(String frenchproductsubcategoryname)
	{
		setFrenchProductSubcategoryName(getContext(), frenchproductsubcategoryname);
	}

	/**
	 * Set value of FrenchProductSubcategoryName
	 * @param context
	 * @param frenchproductsubcategoryname
	 */
	public final void setFrenchProductSubcategoryName(IContext context, String frenchproductsubcategoryname)
	{
		getMendixObject().setValue(context, MemberNames.FrenchProductSubcategoryName.toString(), frenchproductsubcategoryname);
	}

	/**
	 * @return value of ProductSubcategory_ProductCategory
	 */
	public final myfirstmodule.proxies.ProductCategory getProductSubcategory_ProductCategory() throws CoreException
	{
		return getProductSubcategory_ProductCategory(getContext());
	}

	/**
	 * @param context
	 * @return value of ProductSubcategory_ProductCategory
	 */
	public final myfirstmodule.proxies.ProductCategory getProductSubcategory_ProductCategory(IContext context) throws CoreException
	{
		myfirstmodule.proxies.ProductCategory result = null;
		IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.ProductSubcategory_ProductCategory.toString());
		if (identifier != null)
			result = myfirstmodule.proxies.ProductCategory.load(context, identifier);
		return result;
	}

	/**
	 * Set value of ProductSubcategory_ProductCategory
	 * @param productsubcategory_productcategory
	 */
	public final void setProductSubcategory_ProductCategory(myfirstmodule.proxies.ProductCategory productsubcategory_productcategory)
	{
		setProductSubcategory_ProductCategory(getContext(), productsubcategory_productcategory);
	}

	/**
	 * Set value of ProductSubcategory_ProductCategory
	 * @param context
	 * @param productsubcategory_productcategory
	 */
	public final void setProductSubcategory_ProductCategory(IContext context, myfirstmodule.proxies.ProductCategory productsubcategory_productcategory)
	{
		if (productsubcategory_productcategory == null)
			getMendixObject().setValue(context, MemberNames.ProductSubcategory_ProductCategory.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.ProductSubcategory_ProductCategory.toString(), productsubcategory_productcategory.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final IMendixObject getMendixObject()
	{
		return productSubcategoryMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final myfirstmodule.proxies.ProductSubcategory that = (myfirstmodule.proxies.ProductSubcategory) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static String getType()
	{
		return "MyFirstModule.ProductSubcategory";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public String getGUID()
	{
		return "ID_" + getMendixObject().getId().getGuid();
	}
}
