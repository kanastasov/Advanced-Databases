// This file was generated by Mendix Business Modeler 4.0.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package myfirstmodule.proxies;

import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixIdentifier;
import com.mendix.systemwideinterfaces.core.IMendixObject;

/**
 * 
 */
public class ProductCategory
{
	private final IMendixObject productCategoryMendixObject;

	private final IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final String entityName = "MyFirstModule.ProductCategory";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		ProductCategoryKey("ProductCategoryKey"),
		EnglishProductCategoryName("EnglishProductCategoryName"),
		SpanishProductCategoryName("SpanishProductCategoryName"),
		FrenchProductCategoryName("FrenchProductCategoryName");

		private String metaName;

		MemberNames(String s)
		{
			metaName = s;
		}

		@Override
		public String toString()
		{
			return metaName;
		}
	}

	public ProductCategory(IContext context)
	{
		this(context, Core.instantiate(context, "MyFirstModule.ProductCategory"));
	}

	protected ProductCategory(IContext context, IMendixObject productCategoryMendixObject)
	{
		if (productCategoryMendixObject == null)
			throw new IllegalArgumentException("The given object cannot be null.");
		if (!Core.isSubClassOf("MyFirstModule.ProductCategory", productCategoryMendixObject.getType()))
			throw new IllegalArgumentException("The given object is not a MyFirstModule.ProductCategory");

		this.productCategoryMendixObject = productCategoryMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'new ProductCategory(Context)' instead. Note that the constructor will not insert the new object in the database.
	 */
	@Deprecated
	public static myfirstmodule.proxies.ProductCategory create(IContext context) throws CoreException
	{
		IMendixObject mendixObject = Core.create(context, "MyFirstModule.ProductCategory");
		return new myfirstmodule.proxies.ProductCategory(context, mendixObject);
	}

	/**
	 * @deprecated Use 'ProductCategory.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static myfirstmodule.proxies.ProductCategory initialize(IContext context, IMendixIdentifier mendixIdentifier) throws CoreException
	{
		return myfirstmodule.proxies.ProductCategory.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.getSudoContext() can be used to obtain sudo access).
	 */
	public static myfirstmodule.proxies.ProductCategory initialize(IContext context, IMendixObject mendixObject)
	{
		return new myfirstmodule.proxies.ProductCategory(context, mendixObject);
	}

	public static myfirstmodule.proxies.ProductCategory load(IContext context, IMendixIdentifier mendixIdentifier) throws CoreException
	{
		IMendixObject mendixObject = Core.retrieveId(context, mendixIdentifier);
		return myfirstmodule.proxies.ProductCategory.initialize(context, mendixObject);
	}

	public static java.util.List<myfirstmodule.proxies.ProductCategory> load(IContext context, String xpathConstraint) throws CoreException
	{
		java.util.List<myfirstmodule.proxies.ProductCategory> result = new java.util.ArrayList<myfirstmodule.proxies.ProductCategory>();
		for (IMendixObject obj : Core.retrieveXPathQuery(context, "//MyFirstModule.ProductCategory" + xpathConstraint))
			result.add(myfirstmodule.proxies.ProductCategory.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws CoreException
	{
		Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(IContext context) throws CoreException
	{
		Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(IContext context)
	{
		Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of ProductCategoryKey
	 */
	public final Integer getProductCategoryKey()
	{
		return getProductCategoryKey(getContext());
	}

	/**
	 * @param context
	 * @return value of ProductCategoryKey
	 */
	public final Integer getProductCategoryKey(IContext context)
	{
		return (Integer) getMendixObject().getValue(context, MemberNames.ProductCategoryKey.toString());
	}

	/**
	 * Set value of ProductCategoryKey
	 * @param productcategorykey
	 */
	public final void setProductCategoryKey(Integer productcategorykey)
	{
		setProductCategoryKey(getContext(), productcategorykey);
	}

	/**
	 * Set value of ProductCategoryKey
	 * @param context
	 * @param productcategorykey
	 */
	public final void setProductCategoryKey(IContext context, Integer productcategorykey)
	{
		getMendixObject().setValue(context, MemberNames.ProductCategoryKey.toString(), productcategorykey);
	}

	/**
	 * @return value of EnglishProductCategoryName
	 */
	public final String getEnglishProductCategoryName()
	{
		return getEnglishProductCategoryName(getContext());
	}

	/**
	 * @param context
	 * @return value of EnglishProductCategoryName
	 */
	public final String getEnglishProductCategoryName(IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.EnglishProductCategoryName.toString());
	}

	/**
	 * Set value of EnglishProductCategoryName
	 * @param englishproductcategoryname
	 */
	public final void setEnglishProductCategoryName(String englishproductcategoryname)
	{
		setEnglishProductCategoryName(getContext(), englishproductcategoryname);
	}

	/**
	 * Set value of EnglishProductCategoryName
	 * @param context
	 * @param englishproductcategoryname
	 */
	public final void setEnglishProductCategoryName(IContext context, String englishproductcategoryname)
	{
		getMendixObject().setValue(context, MemberNames.EnglishProductCategoryName.toString(), englishproductcategoryname);
	}

	/**
	 * @return value of SpanishProductCategoryName
	 */
	public final String getSpanishProductCategoryName()
	{
		return getSpanishProductCategoryName(getContext());
	}

	/**
	 * @param context
	 * @return value of SpanishProductCategoryName
	 */
	public final String getSpanishProductCategoryName(IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.SpanishProductCategoryName.toString());
	}

	/**
	 * Set value of SpanishProductCategoryName
	 * @param spanishproductcategoryname
	 */
	public final void setSpanishProductCategoryName(String spanishproductcategoryname)
	{
		setSpanishProductCategoryName(getContext(), spanishproductcategoryname);
	}

	/**
	 * Set value of SpanishProductCategoryName
	 * @param context
	 * @param spanishproductcategoryname
	 */
	public final void setSpanishProductCategoryName(IContext context, String spanishproductcategoryname)
	{
		getMendixObject().setValue(context, MemberNames.SpanishProductCategoryName.toString(), spanishproductcategoryname);
	}

	/**
	 * @return value of FrenchProductCategoryName
	 */
	public final String getFrenchProductCategoryName()
	{
		return getFrenchProductCategoryName(getContext());
	}

	/**
	 * @param context
	 * @return value of FrenchProductCategoryName
	 */
	public final String getFrenchProductCategoryName(IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.FrenchProductCategoryName.toString());
	}

	/**
	 * Set value of FrenchProductCategoryName
	 * @param frenchproductcategoryname
	 */
	public final void setFrenchProductCategoryName(String frenchproductcategoryname)
	{
		setFrenchProductCategoryName(getContext(), frenchproductcategoryname);
	}

	/**
	 * Set value of FrenchProductCategoryName
	 * @param context
	 * @param frenchproductcategoryname
	 */
	public final void setFrenchProductCategoryName(IContext context, String frenchproductcategoryname)
	{
		getMendixObject().setValue(context, MemberNames.FrenchProductCategoryName.toString(), frenchproductcategoryname);
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final IMendixObject getMendixObject()
	{
		return productCategoryMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final myfirstmodule.proxies.ProductCategory that = (myfirstmodule.proxies.ProductCategory) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static String getType()
	{
		return "MyFirstModule.ProductCategory";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public String getGUID()
	{
		return "ID_" + getMendixObject().getId().getGuid();
	}
}
